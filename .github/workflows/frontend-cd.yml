# week08/.github/workflows/frontend-cd.yml

name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service'
        required: true
        default: 'http://<ip_address>:8000'
      order_api_ip:
        description: 'External IP of Order Service'
        required: true
        default: 'http://<ip_address>:8001'
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
        default: 'week08-aks'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: 'week08-rg'

  workflow_call:
    inputs:
      product_api_ip:
        required: true
        type: string
      order_api_ip:
        required: true
        type: string
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login using a Service Principal secret
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Define ACR vars
      - name: Set ACR variables
        run: |
          echo "ACR_NAME=week08sit722acr" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=week08sit722acr.azurecr.io" >> $GITHUB_ENV

      # Login to Azure Container Registry
      - name: Login to Azure Container Registry
        run: az acr login --name $ACR_NAME

      # Inject Backend IPs into Frontend main.js
      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting IPs into frontend/main.js"
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          echo "--- Modified main.js content ---"
          cat frontend/main.js
          echo "---------------------------------"

      # Build and Push Docker image for Frontend
      - name: Build and Push Frontend Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/frontend:latest ./frontend/
          docker push $ACR_LOGIN_SERVER/frontend:latest

      # Set Kubernetes context (get AKS credentials)
      - name: Set Kubernetes context (get AKS credentials)
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      # Deploy frontend app
      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend to AKS cluster: ${{ inputs.aks_cluster_name }}"
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout from Azure (AKS deployment)
        run: az logout

